CREATE TYPE USER_TYPES AS ENUM (
	'STUDENT', 'STAFF', 'ADMIN'
);


CREATE TABLE ACCOUNT (
USERNAME VARCHAR(20) NOT NULL PRIMARY KEY,
PASSWORD VARCHAR(20) NOT NULL,
EMAIL VARCHAR(30) NOT NULL,
USER_TYPE USER_TYPES NOT NULL
);

CREATE TYPE DEPARTMENTS AS ENUM (
	'CMP','EEC','AER', 'ARCH', 'CHE', 'BMES', 'EPM', 'EMP', 'MECH', 'MPM'
);

CREATE TABLE STAFF_MEMBER (
ID SERIAL NOT NULL PRIMARY KEY,
NAME VARCHAR(50) NOT NULL,
DEPARTMENT DEPARTMENTS,  
CONTACT_INFO TEXT, 
OFFICE_HOURS TEXT, 
USERNAME VARCHAR(20) ,
FOREIGN KEY(USERNAME)REFERENCES ACCOUNT ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE STUDENT (
ID SERIAL NOT NULL PRIMARY KEY,
NAME VARCHAR(50) NOT NULL,
BENCH_NUMBER INT,
SECTION_NUMBER INT,
CURRENT_YEAR INT CHECK (CURRENT_YEAR >= 0 AND CURRENT_YEAR <= 5),
USERNAME VARCHAR(20) ,
FOREIGN KEY(USERNAME) REFERENCES ACCOUNT ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE COURSE (
CODE VARCHAR(10) NOT NULL PRIMARY KEY,
NAME VARCHAR(50) NOT NULL,
YEAR INT NOT NULL CHECK (YEAR >= 1 AND YEAR < 5)
);

CREATE TYPE SEMESTERS AS ENUM (
	'FALL','SPRING','SUMMER'
);

CREATE TABLE SEMESTER (
SEMESTER SEMESTERS NOT NULL, 
YEAR INT NOT NULL,
PRIMARY KEY (SEMESTER, YEAR)
);

CREATE TABLE PROJECT (
ID SERIAL NOT NULL,
COURSE_CODE VARCHAR(10) NOT NULL,
NAME VARCHAR(20),
DOCUMENT VARCHAR(30),
PRIMARY KEY(ID),
FOREIGN KEY(COURSE_CODE) REFERENCES COURSE ON DELETE CASCADE ON UPDATE CASCADE 
);


CREATE TABLE REQUIREMENT (
ID SERIAL NOT NULL,
COURSE_CODE VARCHAR(10) NOT NULL,
PROJECT_ID INT,
NAME VARCHAR(20),
DEADLINE TIMESTAMP,
ADDITIONAL_MATERIALS VARCHAR(30),
DOCUMENT VARCHAR(30),
TYPE INT,
membersnumber int4range,

PRIMARY KEY(ID),
FOREIGN KEY(COURSE_CODE) REFERENCES COURSE ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(PROJECT_ID) REFERENCES PROJECT ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE TEAM (
TEAM_ID SERIAL NOT NULL,
TEAM_NUMBER INT NOT NULL,
NAME VARCHAR(20),
REQUIREMENT_ID INT NOT NULL,
COURSE_CODE VARCHAR(10) NOT NULL,
YEAR INT NOT NULL,
SEMESTER SEMESTERS NOT NULL,
PRIMARY KEY(TEAM_ID),
FOREIGN KEY(REQUIREMENT_ID) REFERENCES REQUIREMENT ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(SEMESTER, YEAR) REFERENCES SEMESTER ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE DELIVERABLE (
ID SERIAL NOT NULL,
REQUIREMENT_ID INT NOT NULL,
COURSE_CODE VARCHAR(10) NOT NULL,
IS_PUBLIC BOOL,
MATERIALS VARCHAR(30) NOT NULL,
DELIVERY_TIME TIMESTAMP NOT NULL,
TEAM_ID INT ,
STUDENT_ID INT,
FEEDBACK TEXT,
FEEDBACK_STAFF_ID INT,
YEAR INT NOT NULL,
SEMESTER SEMESTERS NOT NULL,
PRIMARY KEY(ID),
FOREIGN KEY(REQUIREMENT_ID) REFERENCES REQUIREMENT ON DELETE RESTRICT ON UPDATE CASCADE,
FOREIGN KEY(TEAM_ID) REFERENCES TEAM ON DELETE RESTRICT ON UPDATE CASCADE,
FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT ON DELETE RESTRICT ON UPDATE CASCADE,
FOREIGN KEY(FEEDBACK_STAFF_ID) REFERENCES STAFF_MEMBER ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE STD_ASSIGNED (
COURSE_CODE VARCHAR(10) NOT NULL,
REQUIREMENT_ID INT NOT NULL,
YEAR INT NOT NULL,
SEMESTER SEMESTERS NOT NULL,
PRIMARY KEY( REQUIREMENT_ID, YEAR, SEMESTER),
FOREIGN KEY(REQUIREMENT_ID) REFERENCES REQUIREMENT ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(SEMESTER, YEAR) REFERENCES SEMESTER ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE FORM_TEAM (
STUDENT_ID INT NOT NULL,
TEAM_ID INT NOT NULL,
PRIMARY KEY(STUDENT_ID, TEAM_ID),
FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT ON DELETE RESTRICT ON UPDATE CASCADE,
FOREIGN KEY(TEAM_ID) REFERENCES TEAM ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ENROLL (
STUDENT_ID INT NOT NULL,
COURSE_CODE VARCHAR(10) NOT NULL,
YEAR INT NOT NULL,
SEMESTER SEMESTERS NOT NULL,
PRIMARY KEY(STUDENT_ID, COURSE_CODE, YEAR, SEMESTER),
FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT ON DELETE RESTRICT ON UPDATE CASCADE,
FOREIGN KEY(COURSE_CODE) REFERENCES COURSE ON DELETE RESTRICT ON UPDATE CASCADE,
FOREIGN KEY(SEMESTER, YEAR) REFERENCES SEMESTER ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE TEACH (
STAFF_MEMBER_ID INT NOT NULL,
COURSE_CODE VARCHAR(10) NOT NULL,
YEAR INT NOT NULL,
SEMESTER SEMESTERS NOT NULL,
PRIMARY KEY(STAFF_MEMBER_ID, COURSE_CODE, YEAR, SEMESTER),
FOREIGN KEY(STAFF_MEMBER_ID) REFERENCES STAFF_MEMBER ON DELETE RESTRICT ON UPDATE CASCADE,
FOREIGN KEY(COURSE_CODE) REFERENCES COURSE ON DELETE RESTRICT ON UPDATE CASCADE,
FOREIGN KEY(SEMESTER, YEAR) REFERENCES SEMESTER ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE NOTIFICATION (
NOTIFICATION_ID	SERIAL PRIMARY KEY,
MESSAGE	TEXT NOT NULL
)

CREATE TABLE USER_NOTIFICATION (
NOTIFICATION_ID	INT,
USERNAME VARCHAR(20),
PRIMARY KEY(NOTIFICATION_ID, USERNAME),
FOREIGN KEY(NOTIFICATION_ID) REFERENCES NOTIFICATION,
FOREIGN KEY(USERNAME) REFERENCES ACCOUNT
)